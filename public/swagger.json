{
  "openapi": "3.0.0",
  "info": {
    "title": "Whisp App API",
    "version": "0.2.0",
    "description": "API for Whisp - An analytical tool for the support of zero-deforestation regulation claims"
  },
  "servers": [
    {
      "url": "/",
      "description": "Current host"
    }
  ],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY",
        "description": "API key for authentication. This key is automatically provided by the documentation UI."
      }
    },
    "schemas": {
      "AnalysisOptions": {
        "type": "object",
        "description": "üîß Analysis Configuration Options - Controls how the analysis is performed",
        "properties": {
          "externalIdColumn": {
            "type": "string",
            "description": "üìã External ID Column - Optional column name for external identifiers in your data",
            "example": ""
          },
          "nationalCodes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "co",
                "ci",
                "br"
              ]
            },
            "description": "üåç Additional National Codes - Select additional country data for analysis: 'co' (Colombia), 'ci' (C√¥te d'Ivoire), 'br' (Brazil)",
            "example": [
              "co",
              "ci",
              "br"
            ]
          },
          "unitType": {
            "type": "string",
            "enum": [
              "ha",
              "percent"
            ],
            "description": "üìè Unit Type - Choose output units: 'ha' for hectares or 'percent' for percentage values",
            "example": "ha"
          },
          "async": {
            "type": "boolean",
            "description": "‚ö° Async Mode - Set to true for background processing (recommended for large datasets), false for immediate results",
            "example": true
          }
        }
      },
      "AnalysisResponse": {
        "type": "object",
        "description": "Analysis response using ApiResponse structure - format depends on whether async mode is enabled",
        "properties": {
          "code": {
            "type": "string",
            "description": "System response code indicating status",
            "example": "analysis_processing"
          },
          "message": {
            "type": "string",
            "description": "Human-readable status or result message",
            "example": "Analysis in progress..."
          },
          "data": {
            "oneOf": [
              {
                "title": "Synchronous Analysis Data",
                "description": "Immediate results when async=false",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Analysis result for each analyzed feature"
                }
              },
              {
                "title": "Asynchronous Analysis Data",
                "description": "Processing status when async=true",
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Unique token for tracking the analysis",
                    "example": "907692b4-ef74-4945-9052-1808bbbb8f8"
                  },
                  "statusUrl": {
                    "type": "string",
                    "description": "URL to check analysis status",
                    "example": "/api/status/907692b4-ef74-4945-9052-1808bbbb8f8"
                  }
                },
                "required": [
                  "token",
                  "statusUrl"
                ]
              }
            ]
          }
        },
        "required": [
          "code",
          "message",
          "data"
        ]
      },
      "SystemCodes": {
        "type": "object",
        "description": "üîó CENTRAL REFERENCE: All API response codes with descriptions and HTTP status codes. Referenced by all error responses throughout the API documentation.",
        "properties": {
          "system_codes": {
            "type": "object",
            "description": "System and general error codes",
            "properties": {
              "system_internal_server_error": {
                "type": "string",
                "description": "Internal server error (HTTP 500)",
                "example": "An internal server error occurred. Please try again later."
              },
              "system_missing_request_body": {
                "type": "string",
                "description": "Missing or invalid request body (HTTP 400)",
                "example": "Missing or invalid request body."
              }
            }
          },
          "analysis_codes": {
            "type": "object",
            "description": "Analysis-related response codes",
            "properties": {
              "analysis_processing": {
                "type": "string",
                "description": "Analysis is currently running (HTTP 200)",
                "example": "Analysis in progress..."
              },
              "analysis_completed": {
                "type": "string",
                "description": "Analysis finished successfully (HTTP 200)",
                "example": "Analysis completed successfully"
              },
              "analysis_error": {
                "type": "string",
                "description": "Analysis service encountered an error (HTTP 500)",
                "example": "Analysis service encountered an error. Please try again."
              },
              "analysis_timeout": {
                "type": "string",
                "description": "Analysis timed out (HTTP 408)",
                "example": "Analysis timed out after 90 seconds. Please try with a smaller dataset."
              },
              "analysis_job_not_found": {
                "type": "string",
                "description": "Analysis job not found (HTTP 404)",
                "example": "Analysis job not found."
              }
            }
          },
          "validation_codes": {
            "type": "object",
            "description": "Data validation error codes",
            "properties": {
              "validation_missing_required_fields": {
                "type": "string",
                "description": "Missing required fields (HTTP 400)",
                "example": "Missing required fields: field1, field2"
              },
              "validation_invalid_geojson": {
                "type": "string",
                "description": "Invalid GeoJSON format (HTTP 400)",
                "example": "The body does not contain a valid GeoJSON."
              },
              "validation_invalid_wkt": {
                "type": "string",
                "description": "Invalid WKT format (HTTP 400)",
                "example": "Invalid WKT format. Unable to parse geometry."
              },
              "validation_invalid_coordinates": {
                "type": "string",
                "description": "Invalid coordinate values (HTTP 400)",
                "example": "Invalid coordinates. Please ensure your data uses EPSG:4326 (WGS84)."
              },
              "validation_invalid_crs": {
                "type": "string",
                "description": "Invalid coordinate reference system (HTTP 400)",
                "example": "Invalid coordinate reference system. Only EPSG:4326 is supported."
              },
              "validation_coordinates_in_meters": {
                "type": "string",
                "description": "Coordinates appear to be in meters (HTTP 400)",
                "example": "Coordinates appear to be in meters rather than degrees."
              },
              "validation_too_many_geometries": {
                "type": "string",
                "description": "Too many geometries provided (HTTP 400)",
                "example": "Too many geometries provided. Maximum allowed is 500."
              }
            }
          },
          "auth_codes": {
            "type": "object",
            "description": "Authentication error codes",
            "properties": {
              "auth_missing_api_key": {
                "type": "string",
                "description": "API key is required (HTTP 401)",
                "example": "API key is required for this request."
              },
              "auth_invalid_api_key": {
                "type": "string",
                "description": "Invalid or expired API key (HTTP 401)",
                "example": "Invalid or expired API key."
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/submit/geojson": {
      "post": {
        "summary": "Submit GeoJSON for Analysis",
        "description": "Accepts a GeoJSON object, specifically a Feature with a Polygon geometry, for analysis.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "GeoJSON FeatureCollection with optional analysis configuration",
                "required": [
                  "type",
                  "features"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "FeatureCollection"
                    ],
                    "description": "Must be 'FeatureCollection'"
                  },
                  "features": {
                    "type": "array",
                    "description": "üó∫Ô∏è GeoJSON Features - Array of geographic features with Polygon geometries to analyze",
                    "items": {
                      "type": "object",
                      "description": "GeoJSON Feature with Polygon geometry"
                    }
                  },
                  "analysisOptions": {
                    "$ref": "#/components/schemas/AnalysisOptions"
                  }
                }
              },
              "example": {
                "type": "FeatureCollection",
                "features": [
                  {
                    "type": "Feature",
                    "geometry": {
                      "type": "Polygon",
                      "coordinates": [
                        [
                          [
                            -1.612173914909363,
                            6.160144879904404
                          ],
                          [
                            -1.6128122806549074,
                            6.159344862841789
                          ],
                          [
                            -1.6128337383270266,
                            6.15914219166122
                          ],
                          [
                            -1.6120773553848267,
                            6.158870185481485
                          ],
                          [
                            -1.611771583557129,
                            6.158838184745289
                          ],
                          [
                            -1.6111814975738528,
                            6.159483532552345
                          ],
                          [
                            -1.611224412918091,
                            6.160011543811027
                          ],
                          [
                            -1.6117393970489502,
                            6.160299549730771
                          ],
                          [
                            -1.612173914909363,
                            6.160144879904404
                          ]
                        ]
                      ]
                    }
                  }
                ],
                "analysisOptions": {
                  "externalIdColumn": "",
                  "nationalCodes": [
                    "co",
                    "ci",
                    "br"
                  ],
                  "unitType": "ha",
                  "async": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "GeoJSON analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible validation_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from validation_codes category",
                      "example": "validation_invalid_geojson"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "The body does not contain a valid GeoJSON."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid_geojson": {
                    "summary": "Invalid GeoJSON",
                    "value": {
                      "code": "validation_invalid_geojson",
                      "message": "The body does not contain a valid GeoJSON.",
                      "data": null
                    }
                  },
                  "too_many_geometries": {
                    "summary": "Too many geometries",
                    "value": {
                      "code": "validation_too_many_geometries",
                      "message": "Too many geometries provided. Maximum allowed is 500.",
                      "data": null
                    }
                  },
                  "invalid_wkt": {
                    "summary": "Invalid WKT",
                    "value": {
                      "code": "validation_invalid_wkt",
                      "message": "Invalid WKT format. Unable to parse geometry.",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible auth_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from auth_codes category",
                      "example": "auth_invalid_api_key"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Invalid or expired API key."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "missing_api_key": {
                    "summary": "Missing API key",
                    "value": {
                      "code": "auth_missing_api_key",
                      "message": "API key is required for this request.",
                      "data": null
                    }
                  },
                  "invalid_api_key": {
                    "summary": "Invalid API key",
                    "value": {
                      "code": "auth_invalid_api_key",
                      "message": "Invalid or expired API key.",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Analysis process error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible analysis_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from analysis_codes category",
                      "example": "analysis_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Analysis service encountered an error. Please try again."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "analysis_error": {
                    "summary": "Analysis error",
                    "value": {
                      "code": "analysis_error",
                      "message": "Analysis service encountered an error. Please try again.",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/submit/wkt": {
      "post": {
        "summary": "Submit WKT for Analysis",
        "description": "Accepts a WKT (Well-Known Text) string for analysis.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "WKT (Well-Known Text) string with optional analysis configuration",
                "required": [
                  "wkt"
                ],
                "properties": {
                  "wkt": {
                    "type": "string",
                    "description": "üó∫Ô∏è WKT String - Well-Known Text representation of a polygon geometry (e.g., POLYGON((...)))"
                  },
                  "analysisOptions": {
                    "$ref": "#/components/schemas/AnalysisOptions"
                  }
                }
              },
              "example": {
                "wkt": "POLYGON((-4.286591893206829 5.545425708271704,-4.2872464587004755 5.54450734589365,-4.2883087863049205 5.54450734589365,-4.287901024194124 5.545607244851676,-4.286591893206829 5.545425708271704))",
                "analysisOptions": {
                  "externalIdColumn": "",
                  "nationalCodes": [
                    "co",
                    "ci",
                    "br"
                  ],
                  "unitType": "ha",
                  "async": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "WKT analysis results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "Analysis results"
                    },
                    "token": {
                      "type": "string",
                      "description": "Unique token for the analysis"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible validation_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from validation_codes category",
                      "example": "validation_invalid_geojson"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "The body does not contain a valid GeoJSON."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "invalid_geojson": {
                    "summary": "Invalid GeoJSON",
                    "value": {
                      "code": "validation_invalid_geojson",
                      "message": "The body does not contain a valid GeoJSON.",
                      "data": null
                    }
                  },
                  "too_many_geometries": {
                    "summary": "Too many geometries",
                    "value": {
                      "code": "validation_too_many_geometries",
                      "message": "Too many geometries provided. Maximum allowed is 500.",
                      "data": null
                    }
                  },
                  "invalid_wkt": {
                    "summary": "Invalid WKT",
                    "value": {
                      "code": "validation_invalid_wkt",
                      "message": "Invalid WKT format. Unable to parse geometry.",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible auth_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from auth_codes category",
                      "example": "auth_invalid_api_key"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Invalid or expired API key."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "missing_api_key": {
                    "summary": "Missing API key",
                    "value": {
                      "code": "auth_missing_api_key",
                      "message": "API key is required for this request.",
                      "data": null
                    }
                  },
                  "invalid_api_key": {
                    "summary": "Invalid API key",
                    "value": {
                      "code": "auth_invalid_api_key",
                      "message": "Invalid or expired API key.",
                      "data": null
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Analysis process error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for all possible analysis_* codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from analysis_codes category",
                      "example": "analysis_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Analysis service encountered an error. Please try again."
                    },
                    "data": {
                      "type": "null",
                      "description": "Error responses have null data"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "analysis_error": {
                    "summary": "Analysis error",
                    "value": {
                      "code": "analysis_error",
                      "message": "Analysis service encountered an error. Please try again.",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/status/{token}": {
      "get": {
        "summary": "Check Analysis Status",
        "description": "Check the status of an analysis job using the token received from async analysis submission.",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "Unique analysis token received from async analysis submission",
            "schema": {
              "type": "string",
              "example": "907692b4-ef74-4945-9052-1808bbbb8f8"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis status response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Status response with different formats based on analysis state",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Status code indicating current state",
                      "enum": [
                        "analysis_processing",
                        "analysis_completed",
                        "analysis_error",
                        "analysis_timeout",
                        "analysis_job_not_found"
                      ],
                      "example": "analysis_processing"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable status message",
                      "example": "Analysis is in progress"
                    },
                    "data": {
                      "oneOf": [
                        {
                          "title": "Processing State",
                          "description": "When analysis is still running (analysis_processing)",
                          "type": "null"
                        },
                        {
                          "title": "Completed State",
                          "description": "When analysis is finished (analysis_completed)",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Analysis results for each analyzed feature"
                          }
                        },
                        {
                          "title": "Error State",
                          "description": "When analysis has failed or job not found",
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - API key error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for auth_codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from auth_codes category",
                      "example": "auth_invalid_api_key"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "data": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Analysis job not found (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for analysis_codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from analysis_codes category",
                      "example": "analysis_job_not_found"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Analysis job not found."
                    },
                    "data": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "analysis_job_not_found",
                  "message": "Analysis job not found.",
                  "data": null
                }
              }
            }
          },
          "408": {
            "description": "Analysis timeout (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for analysis_codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from analysis_codes category",
                      "example": "analysis_timeout"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message",
                      "example": "Analysis timed out after 90 seconds. Please try with a smaller dataset."
                    },
                    "data": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "example": {
                  "code": "analysis_timeout",
                  "message": "Analysis timed out after 90 seconds. Please try with a smaller dataset.",
                  "data": null
                }
              }
            }
          },
          "500": {
            "description": "Analysis process error (see SystemCodes schema for complete reference)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Standard error response following ApiResponse format. See SystemCodes schema for analysis_codes.",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "System error code from analysis_codes category",
                      "example": "analysis_error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Human-readable error message"
                    },
                    "data": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                },
                "examples": {
                  "analysis_error": {
                    "summary": "General analysis error",
                    "value": {
                      "code": "analysis_error",
                      "message": "Analysis service encountered an error. Please try again.",
                      "data": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}