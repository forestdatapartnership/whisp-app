name: Create Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'release/**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write     
      issues: read        
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: vars
        run: |
          VER=$(node -p "require('./package.json').version")
          echo "VER=$VER"   >> $GITHUB_ENV
          echo "TAG=v$VER"  >> $GITHUB_ENV

      - name: Ensure git tag
        run: |
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi

      - id: milestone
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          MID=$(gh api "repos/${GITHUB_REPOSITORY}/milestones" \
                --jq ".[] | select(.title==\"$TAG\") | .number") || true
          echo "MID=$MID" >> $GITHUB_ENV

      - id: notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "$MID" ]; then
            BODY=$(gh issue list --state closed --milestone "$TAG" \
                   --repo "$GITHUB_REPOSITORY" \
                   --json title,number \
                   --jq '.[] | "- " + .title + " (#" + (.number|tostring) + ")"')
            NOTES="## What's Changed\n\n${BODY:-No closed issues in this milestone.}"
          else
            NOTES="## Release $TAG\n\nNo milestone named $TAG was found."
          fi
          printf '%s\n' "$NOTES" > RELEASE_NOTES.md
          echo "NOTES_PATH=RELEASE_NOTES.md" >> $GITHUB_ENV

      - name: Publish GitHub release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "$TAG" \
            --title "Release $TAG" \
            --notes-file "$NOTES_PATH" \
            --target ${{ github.sha }}